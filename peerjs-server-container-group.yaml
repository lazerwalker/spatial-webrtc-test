# az container create --resource-group <myResourceGroup> --file peerjs-server-container-group.yaml
apiVersion: 2018-10-01
location: eastus
name: peerjs-server-group
properties:
  containers:
    - name: peerjs-server
      properties:
        image: peerjs/peerjs-server
        command:
          [
            "node",
            "bin/peerjs",
            "--port",
            "9000",
            "--path",
            "/myapp",
            "--proxied",
          ]
        resources:
          requests:
            cpu: 1
            memoryInGb: 1
        ports:
          - port: 9000
    - name: caddy
      properties:
        image: caddy:latest
        command:
          [
            "caddy",
            "reverse-proxy",
            "--from",
            "lazerwalker-peerjs-server.eastus.azurecontainer.io",
            "--to",
            "localhost:9000",
          ]
        resources:
          requests:
            cpu: 1
            memoryInGb: 1
        ports:
          - port: 80
          - port: 443
        volumeMounts:
          - name: "data"
            mountPath: "/data"
          - name: "config"
            mountPath: "/config"

  osType: Linux
  restartPolicy: always
  ipAddress:
    type: Public
    ports:
      - protocol: tcp
        port: 80
      - protocol: tcp
        port: 443
      - protocol: tcp
        port: 9000
    dnsNameLabel: lazerwalker-peerjs-server
  volumes:
    - name: "data"
      emptyDir: {}
    - name: "config"
      emptyDir: {}

tags: null
type: Microsoft.ContainerInstance/containerGroups
